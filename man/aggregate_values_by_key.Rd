% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate-functions.R
\name{aggregate_values_by_key}
\alias{aggregate_values_by_key}
\title{Aggregates matrices values based on specified key.}
\usage{
aggregate_values_by_key(
  x,
  association_file,
  key = "SubjectID",
  lambda = "sum",
  args = NULL,
  group = c(mandatory_IS_vars(), annotation_IS_vars()),
  namespace = "base",
  env = .GlobalEnv
)
}
\arguments{
\item{x}{A single integration matrix (tibble) or a list of imported
integration matrices (tibble)}

\item{association_file}{The imported association file}

\item{key}{A string or a character vector with column names of the
association file to take as keys}

\item{lambda}{The name of the aggregating function to apply to values}

\item{args}{Other arguments to pass to lambda, can be set to NULL}

\item{group}{Other variables to include in the grouping besides \code{key},
can be set to NULL}

\item{namespace}{The namespace that exports \code{lambda}. Can be set to NULL if
lambda is not an exported object but rather a user-defined function in some
environment.}

\item{env}{The environment in which the function should look for symbols}
}
\value{
A list of tibbles or a single tibble according to input
}
\description{
\lifecycle{experimental}
Performs aggregation on values contained in the integration matrices based
on the key and the specified lambda. For more details on how to use this
function:
\code{vignette("Working with aggregate functions", package = "ISAnalytics")}
}
\examples{
op <- options("ISAnalytics.widgets" = FALSE)
path_AF <- system.file("extdata", "ex_association_file.tsv",
    package = "ISAnalytics"
)
root_correct <- system.file("extdata", "fs.zip", package = "ISAnalytics")
root_correct <- unzip_file_system(root_correct, "fs")
association_file <- import_association_file(path_AF, root_correct)
matrices <- import_parallel_Vispa2Matrices_auto(
    association_file = association_file, root = NULL,
    quantification_type = c("fragmentEstimate", "seqCount"),
    matrix_type = "annotated", workers = 2, matching_opt = "ANY"
)
agg <- aggregate_values_by_key(
    x = matrices$seqCount,
    association_file = association_file,
    key = "SubjectID", args = list(na.rm = TRUE)
)
options(op)
}
\seealso{
Other Aggregate functions: 
\code{\link{aggregate_metadata}()}
}
\concept{Aggregate functions}
