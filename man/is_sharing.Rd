% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analysis-functions.R
\name{is_sharing}
\alias{is_sharing}
\title{Sharing of integration sites between given groups.}
\usage{
is_sharing(
  x,
  group_key = c("SubjectID", "CellMarker", "Tissue", "TimePoint"),
  is_count = TRUE,
  relative_is_sharing = TRUE
)
}
\arguments{
\item{x}{An integration matrix, aka a data frame containing the columns
chr
integration_locus
strand. See details.}

\item{group_key}{Character vector of column names which identify a
single group. An associated group id will be derived by concatenating
the values of these fields, separated by "_"}

\item{is_count}{Logical, if TRUE returns also the count of IS for
each group}

\item{relative_is_sharing}{Logical, if TRUE also returns the relative
sharing. See details.}
}
\value{
A named list of data frames or a single data frame
}
\description{
\lifecycle{experimental}
Computes the amount of integrations shared between the groups identified
by the fields in the \code{group_key} argument.
An integration site is always identified by the triple
\verb{(chr, integration_locus, strand)}, thus these columns must be present
in the input data frame.
}
\details{
\subsection{Input data frame}{

The data frame provided in input must be in a suitable format for the
calculations to be accurate. Please note that this function does not
perform any sort of aggregation, it only relies on counts of
distinct integration sites.
}

\subsection{Outputs}{

By default the function outputs a list of 2 data frames:
\itemize{
\item The classical sharing data frame with absolute values.
If the argument \code{relative_is_sharing} is set to TRUE it also contains
the relative sharing (see below).
\item The count of distinct IS for each group
}

The relative sharing is calculated, for each pair of groups (A, B) as
3 separate columns
\itemize{
\item Shared over A: (intersection(A,B) / |A|) * 100
\item Shared over B: (intersection(A,B) / |B|) * 100
\item Shared over union: (intersection(A,B) / |union(A,B)|) * 100
}
}

\subsection{Plotting sharing}{

The sharing data obtained can be easily plotted in a heatmap via the
function \code{\link{sharing_heatmap}}.
}
}
\examples{
path <- system.file("extdata", "ex_annotated_ISMatrix.tsv.xz",
    package = "ISAnalytics"
)
matrix <- import_single_Vispa2Matrix(path)
sharing <- is_sharing(matrix, group_key = "CompleteAmplificationID")
}
\seealso{
Other Analysis functions: 
\code{\link{CIS_grubbs}()},
\code{\link{comparison_matrix}()},
\code{\link{compute_abundance}()},
\code{\link{cumulative_count_union}()},
\code{\link{sample_statistics}()},
\code{\link{separate_quant_matrices}()},
\code{\link{threshold_filter}()},
\code{\link{top_integrations}()}
}
\concept{Analysis functions}
